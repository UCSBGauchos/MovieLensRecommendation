Project Name: MovieLens Recommendation
DataSet: http://movielens.org/login

Basic Idea:
Data Preprocess: Hadoop MapReduce
Recommendation Algorithm: Collaborative filtering algorithm to predict the rating a registered users may give to a specific movie.
Future Work: Different recommendation algorithms and compare them.

Path:
cd /Users/yangbo/Workspaces/MyEclipse\ 10/MovieLensRecommendation/src/movieRecommendation

Format the namenode of hadoop system:
hadoop namenode -format

Start your hadoop file system:
start-all.sh

Leave Safe Mode:
hadoop dfsadmin -safemode leave

Create your reporsitory in your hadoop file system:
hadoop fs -mkdir /input
hadoop fs -put u1.test /input

Compile your hadoop program:
javac -classpath /Users/yangbo/Documents/hadoop-1.2.1/hadoop-core-1.2.1.jar -d classes MovieRating.java MovieRatingArrayWritable.java CollectUser.java PostingUser.java PostingUserArrayWritable.java ItemPreprocess.java TendencyItemPreprocess.java PostingMovie.java PostingMovieArrayWritable.java UserPreprocess.java TendencyUserPreprocess.java ItemNeighbour.java ItemNeighbourArrayWritable.java ItemKNNMapper.java ItemKNNMapRunner.java ItemKNNMain.java UserNeighbour.java UserNeighbourArrayWritable.java UserKNNMapper.java UserKNNMapRunner.java  UserKNNMain.java SortedArrayList.java HelloWorld.java ItemQuery.java UserQuery.java MainDriver.java

Greate a JAR file:
jar -cvf knn.jar -C classes/ .

Remove your input
hadoop fs -rmr /input

Run the program: countuser->preprocess->KNN->start
Path: /input -> /user/yangbo/Collect -> /user/yangbo/Preprocess

Collect data:
Hadoop jar knn.jar MainDriver collectuser /input

Item-based
Hadoop jar knn.jar MainDriver itempreprocess
Hadoop jar knn.jar MainDriver itemknn
Hadoop jar knn.jar MainDriver startitemquery

User-based
Hadoop jar knn.jar MainDriver userpreprocess
Hadoop jar knn.jar MainDriver userknn
Hadoop jar knn.jar MainDriver startuserquery

Tendency-based
Hadoop jar knn.jar MainDriver tendencyuserpreprocess
Hadoop jar knn.jar MainDriver tendencyitempreprocess

Schedual:

2-16 Preprocess of the DATA:
The structure of the input data is:
userID movieID rate date
After mapreduce, The structure of the output data is:
movieID(key) [userID userAvgRate specificRate](value)

[XXX, Text]->MAP->[LongWritableKEY(movieID), userPostingInfoVALUE(userID, avgRate, rate)]->Reduce->[LongWritableKEY(movieID), LIST of userPostingInfoVALUE]

2-17:
MainDriver (Trigger, choose function to run) + KNNDriverMain(Step two, process of the preprocessed data)

2-23:
Modify the program structure:Three steps for the data process
1. Collect User: Collect User Data from the original dataset
2. Preprocess: preprocess the data based on the collected dataset
3. KNN

2-25:
Finish Collect User and Preprocess

2-26
KNN algorithm to calculate the neighbour of a specific song based on the user information. Assume just one file by now

3-1
Finish the query. Let the user to input the userID and the movieID, if the movie has not been rated, we will predict the 
rating which this user may give to the movie.

4-1
User-based and item-based query complete

4-6
Tendency-based recommendation
